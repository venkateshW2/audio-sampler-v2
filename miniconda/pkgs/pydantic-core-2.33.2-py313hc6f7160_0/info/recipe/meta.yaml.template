# Keep the version in sync with pydantic-feedstock because the latest version can be incompatible.
{% set version = "2.33.2" %}

package:
  name: pydantic-core
  version: {{ version }}

source:
  url: https://pypi.org/packages/source/p/pydantic-core/pydantic_core-{{ version }}.tar.gz
  sha256: 7cb8bc3605c29176e1b105350d2e6474142d7c1bd1d9327c4a9bdb46bf827acc

build:
  script_env:
    # on osx-64, we get an error from install_name_tool: changing install names or rpaths can't be redone for: <path> (for architecture x86_64) because larger updated load commands do not fit (the program must be relinked, and you may need to use -headerpad or -headerpad_max_install_names)
    # After some investigation, rustc doesn't seem to read our LDFLAGS
    - RUSTFLAGS=-C link-args=-headerpad_max_install_names  # [osx and x86_64]
  script:
    - {{ PYTHON }} -m pip install . -vv --no-deps --no-build-isolation
    - cargo-bundle-licenses --format yaml --output THIRDPARTY.yml
  number: 0
  skip: true  # [py<39]

requirements:
  build:
    - {{ compiler("c") }}
    - {{ compiler("rust") }}
    - cargo-bundle-licenses
  host:
    - pip
    - python
    - typing-extensions >=4.6.0,!=4.7.0
    - maturin >=1,<2
  run:
    - python
    - typing-extensions >=4.6.0,!=4.7.0

test:
  imports:
    - pydantic_core
  commands:
    - pip check
    - python -c "from pydantic_core import PydanticUndefinedType"
  requires:
    - pip

about:
  home: https://github.com/pydantic/pydantic-core
  dev_url: https://github.com/pydantic/pydantic-core
  doc_url: https://docs.pydantic.dev
  summary: Core validation logic for pydantic written in rust
  description: |
    This package provides the core functionality for pydantic validation and serialization.
  license: MIT
  license_family: MIT
  license_file:
    - LICENSE
    - THIRDPARTY.yml

extra:
  recipe-maintainers:
    - xhochy
    - samuelcolvin
    - adriangb
    - dmontagu
    - pavelzw